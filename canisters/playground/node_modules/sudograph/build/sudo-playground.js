import React from "./_snowpack/pkg/react.js";
import ReactDOM from "./_snowpack/pkg/react-dom.js";
import GraphiQL from "./_snowpack/pkg/graphiql-sudograph.js";
import {parse} from "./_snowpack/pkg/graphql.js";
import {
  sudograph
} from "./sudograph.js";
class SudoPlayground extends HTMLElement {
  get canisterId() {
    return this.getAttribute("canisterId");
  }
  constructor() {
    super();
    this.innerHTML = `
            <link href="https://unpkg.com/graphiql/graphiql.min.css" rel="stylesheet" />
        `;
  }
  async connectedCallback() {
    const div = document.createElement("div");
    div.style.height = "100vh";
    document.body.appendChild(div);
    setTimeout(() => {
      ReactDOM.render(React.createElement(GraphiQL, {
        fetcher: graphQLFetcher(this.canisterId)
      }), div);
    }, 1e3);
  }
}
window.customElements.define("sudo-playground", SudoPlayground);
function graphQLFetcher(canisterId) {
  return async (graphQLParams) => {
    const {
      query,
      mutation
    } = sudograph({
      canisterId
    });
    const queryOrMutation = getQueryOrMutation(graphQLParams.query);
    const result = queryOrMutation === "QUERY" ? await query(graphQLParams.query, graphQLParams.variables) : await mutation(graphQLParams.query, graphQLParams.variables);
    return result;
  };
}
function getQueryOrMutation(queryString) {
  const ast = parse(queryString);
  const firstDefinition = ast.definitions[0];
  if (firstDefinition === void 0) {
    return "QUERY";
  }
  return firstDefinition.operation === "query" ? "QUERY" : "MUTATION";
}
